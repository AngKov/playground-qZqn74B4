title : JavaScript promises, mastering the asynchronous

plan:
  - title: What is asynchronous in JavaScript
    statement: part1/statement.md
  - title: Why do we need asynchronous ?
    statement: part2/statement.md
  - title: Quick quiz
    statement: part3/statement.md
  - title: Some pratice
    statement: part4/statement.md
  - title: The challenges of the asynchronous
    statement: part5/statement.md
  - title: The Promise class
    statement: part6/statement.md
  - title: Your first code with promises
    statement: part7/statement.md
  - title: It's time to pratice with promises
    statement: part8/statement.md
  - title: More pratice with promises
    statement: part9/statement.md
  - title: Chaining the promises
    statement: part10/statement.md
  - title: Traps of promises
    statement: part11/statement.md
  - title: The catch method
    statement: part12/statement.md
  - title: It's quiz time
    statement: part13/statement.md
  - title: How to join promises
    statement: part14/statement.md
  - title: A few tricks with promises
    statement: part15/statement.md
  - title: The last challenge
    statement: part16/statement.md
  - title: The last challenge (solution)
    statement: part16/solution.md
  - title: To go further
    statement: part17/statement.md
projects:
  part1:
    root: /part1
    runner: techio/node-npm-runner
  part2:
    root: /part2
    runner: techio/node-npm-runner
  part4:
    root: /part4
    runner: techio/node-npm-runner
  part7:
    root: /part7
    runner: techio/node-npm-runner
  part8:
    root: /part8
    runner: techio/node-npm-runner
  part9:
    root: /part9
    runner: techio/node-npm-runner
  part10:
    root: /part10
    runner: techio/node-npm-runner
  part11:
    root: /part11
    runner: techio/node-npm-runner
  part14:
    root: /part14
    runner: techio/node-npm-runner
  part15:
    root: /part15
    runner: techio/node-npm-runner
  part16:
    root: /part16
    runner: techio/node-npm-runner
